{"version":3,"file":"static/js/561.0989389d.chunk.js","mappings":"0LACA,EAAgC,iCAAhC,EAAiF,iCAAjF,EAAoK,gCCApK,EAA2B,+B,mBCSdA,EAAeC,EAAAA,MACxB,YAA2C,IAAxCC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,GACb,OACI,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAASC,GAAE,qBAAgBH,GAA3B,SAAkCD,SCb9C,EAA0B,yBCObK,EAAUN,EAAAA,MAAW,YAAsC,IAApCO,EAAmC,EAAnCA,YAChC,OAAO,gBAAKJ,UAAWK,EAAhB,SAA4BD,OCD1BE,EAAYT,EAAAA,MAAW,SAACU,GAE7B,IAAMC,EAAmBD,EAAME,UAAUC,KAAI,SAACC,GAAD,OACzC,SAACf,EAAD,CAEIE,WAAYa,EAASb,WACrBC,GAAIY,EAASZ,IAFRY,EAASZ,OAKhBa,EAAkBL,EAAMM,SAASH,KAAI,SAACI,GAAD,OACvC,SAACX,EAAD,CAEIC,YAAaU,EAAQV,YACrBL,GAAIe,EAAQf,IAFPe,EAAQf,OASrB,OACI,iBAAKC,UAAWK,EAAhB,WACI,gBAAKL,UAAWK,EAAhB,SAAkCG,KAClC,iBAAKR,UAAWK,EAAhB,WACI,yBAAMO,KACN,4B,mBCCpB,GAP2BG,E,QAAAA,KACvBC,EAAAA,EAAAA,KARoB,SAACC,GACrB,MAAO,CACHJ,SAAUI,EAAMC,cAAcL,SAC9BJ,UAAWQ,EAAMC,cAAcT,aAO/B,CAAEU,YAAAA,EAAAA,IACNC,EAAAA,EAJuBL,CAK1BT,I,sHCvBGe,EAA6B,SAACJ,GAAD,MAAmD,CAChFK,OAAQL,EAAMM,KAAKD,SAGhB,SAASF,EAAoBI,GAUhC,OADqCR,EAAAA,EAAAA,IAAQK,EAARL,EAPX,SAACT,GACvB,IAAKe,EAAwBf,EAAxBe,OAAWG,GAAhB,OAA6BlB,EAA7B,GACA,OAAKe,GACE,SAACE,GAAD,UAAeC,KADF,SAAC,KAAD,CAAUvB,GAAI,gB,mEChB3B,SAASwB,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,GAAS,OAA6BJ,EAAQC,GAGlD,GAAII,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBN,GAEpD,IAAKG,EAAI,EAAGA,EAAII,EAAiBC,OAAQL,IACvCD,EAAMK,EAAiBJ,GACnBF,EAASQ,QAAQP,IAAQ,GACxBG,OAAOK,UAAUC,qBAAqBC,KAAKZ,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE","sources":["webpack://way-of-samurai/./src/components/Dialogues/Dialogues.module.css?d141","webpack://way-of-samurai/./src/components/Dialogues/DialogueItem/DialogueItem.module.css?d08e","components/Dialogues/DialogueItem/DialogueItem.tsx","webpack://way-of-samurai/./src/components/Dialogues/Message/Message.module.css?6e40","components/Dialogues/Message/Message.tsx","components/Dialogues/Dialogues.tsx","components/Dialogues/DialoguesContainer.tsx","hoc/withAuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialoguesPage\":\"Dialogues_dialoguesPage__Gb9fj\",\"dialoguesList\":\"Dialogues_dialoguesList__FaPCm\",\"active\":\"Dialogues_active__5J7uM\",\"messagesList\":\"Dialogues_messagesList__R5sIV\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogue\":\"DialogueItem_dialogue__GQ8om\"};","import React from \"react\";\nimport classes from \"./DialogueItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { DialogueItemType } from \"../../../redux/dialoguesReducer\";\n\nexport type DialogueItemPropsType = {\n  id: number;\n  personName: string;\n};\n\nexport const DialogueItem = React.memo(\n    ({ personName, id }: DialogueItemType) => {\n      return (\n          <div className={classes.dialogue}>\n            <NavLink to={`/dialogues/${id}`}>{personName}</NavLink>\n          </div>\n      );\n    }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__NnpQL\"};","import React from \"react\";\nimport s from \"./Message.module.css\";\n\nexport type MessagePropsType = {\n    id: number;\n    messageText: string;\n};\n\nexport const Message = React.memo(({messageText}: MessagePropsType) => {\n    return <div className={s.message}>{messageText}</div>;\n});\n","import React from \"react\";\nimport s from \"./Dialogues.module.css\";\nimport {\n    DialogueItem,\n} from \"./DialogueItem/DialogueItem\";\nimport {Message} from \"./Message/Message\";\nimport {DialoguesPropsType} from \"./DialoguesContainer\";\n\nexport const Dialogues = React.memo((props: DialoguesPropsType) => {\n\n        const dialogueElements = props.dialogues.map((dialogue) => (\n            <DialogueItem\n                key={dialogue.id}\n                personName={dialogue.personName}\n                id={dialogue.id}/>\n        ));\n\n        const messageElements = props.messages.map((message) => (\n            <Message\n                key={message.id}\n                messageText={message.messageText}\n                id={message.id}/>\n        ));\n\n        // const addNewMessage = (values: AddMessageFormDataType) => {\n        //     sendMessage(values.newMessageText);\n        // };\n\n        return (\n            <div className={s.dialoguesPage}>\n                <div className={s.dialoguesList}>{dialogueElements}</div>\n                <div className={s.messagesList}>\n                    <div>{messageElements}</div>\n                    <div>\n                        {/*<AddMessageForm onSubmit={addNewMessage}/>*/}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n)\n\n\n","import React from \"react\";\r\nimport {\r\n    DialogueItemType, MessageType, sendMessage\r\n} from \"../../redux/dialoguesReducer\";\r\nimport {Dialogues} from \"./Dialogues\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxRootStateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    messages: Array<MessageType>;\r\n    dialogues: Array<DialogueItemType>;\r\n    // newMessageText: string;\r\n};\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (newMessageBody: string) => void;\r\n};\r\nexport type DialoguesPropsType = MapStatePropsType & MapDispatchPropsType;\r\n\r\nconst mapStateToProps = (state: ReduxRootStateType): MapStatePropsType => {\r\n    return {\r\n        messages: state.dialoguesPage.messages,\r\n        dialogues: state.dialoguesPage.dialogues,\r\n    }\r\n}\r\n\r\nconst DialoguesContainer = compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, unknown, ReduxRootStateType>(\r\n        mapStateToProps,\r\n        { sendMessage }),\r\n    withAuthRedirect)\r\n(Dialogues);\r\n\r\nexport default DialoguesContainer;","import {ReduxRootStateType} from \"../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {ComponentType} from \"react\";\r\n\r\ntype mapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: ReduxRootStateType): mapStatePropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: mapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["DialogueItem","React","personName","id","className","classes","to","Message","messageText","s","Dialogues","props","dialogueElements","dialogues","map","dialogue","messageElements","messages","message","compose","connect","state","dialoguesPage","sendMessage","withAuthRedirect","mapStateToPropsForRedirect","isAuth","auth","Component","restProps","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}